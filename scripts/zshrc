##
### source https://github.com/lennypeers/dotfiles
##

#
## Zsh stuff
#

export ZSH=~/.oh-my-zsh
ZSH_THEME=simple
plugins=(git web-search zsh-syntax-highlighting history)
# TODO: get rid of omz
source $ZSH/oh-my-zsh.sh

#
## Colors, theme stuff
#

source ~/.id

#
## Env vars
#

export LESS_TERMCAP_mb=$(tput bold; tput setaf 41) green
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 3; tput setab 24)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 9)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)
export LESS_TERMCAP_ZN=$(tput ssubm)
export LESS_TERMCAP_ZV=$(tput rsubm)
export LESS_TERMCAP_ZO=$(tput ssupm)
export LESS_TERMCAP_ZW=$(tput rsupm)
export TERM=xterm-256color
export EDITOR=nvim
export MANPAGER='nvim -u NORC +"set ft=man noshowcmd noruler noshowmode laststatus=0 scrolloff=5" --noplugin'

#
## aliases
#

alias b=bat
alias c=color
alias center=~/dotfiles/scripts/center.sh
alias cycle='cat /sys/class/power_supply/BAT0/cycle_count'
alias dl='cd ~/Downloads'
alias f='~/dotfiles/scripts/fetch.sh'
alias grep='grep --color=always'
alias lA='ls -A'
alias mt=make\ test
alias mr=make\ clear
alias mc=make\ clean
alias m=make
alias o=open
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -selection clipboard -o'
alias pbs='nc termbin.com 9999|pbcopy && pbpaste'
alias p=pacman
alias sensors="sensors | grep --color=never 'high\|RPM' | cut -d '(' -f 1"
alias song='playerctl --player=$PLAYER metadata --format "{{ artist }} - {{ title }}"'
alias tmp=/tmp
alias vim=nvim
alias v=nvim
alias vr='nvim -R'

#
## functions
#

# theme
color() {
	(~/dotfiles/scripts/color.sh "$1")
}

# translation
t() {
	echo $@ >> ~/maison/mots.txt
	if [[ $1 = f ]]; then
		shift && echo $@ | trans -shell -b :fr | grep -v "^>$"
	else
		echo $@ | trans -shell -b | grep -v "^>$"
	fi
}

# dictionary
def() {
	[[ $# -lt 1 ]] && echo usage: def \<stuff\> && return 1
	echo $@ >> ~/maison/def.txt
	echo $@ | trans | less -FX
}

# pandoc
pan() {
	[[ $# != 1 ]] && echo usage: EXT= pan \<file\> && return 1
	var="${1%.*}"
	pandoc --highlight-style=tango -so "$var"."${EXT:-pdf}" "$var".md
}

# karaoke stuff lmao
lyrics() {
# receives 2 arguments : artist and title
# fork of https://gist.github.com/febuiles/1549991
	[[ $# != 2 ]] && echo usage: lyrics \<artist\> \<title\> && return 1
	{
	echo -e $1 - $2 "\n"
	curl -s --get "https://makeitpersonal.co/lyrics" --data-urlencode "artist=$1" --data-urlencode "title=$2"
	} | ~/dotfiles/scripts/center.sh | less -FX
}

lyr() {
	song | IFS=- read a b
	lyrics "$a" "$b"
}

open() {
	local opener
	while [[ $# != 0 ]]; do
		if [[ ${1##*.} = pdf ]]; then
			opener=zathura
		else
			opener=xdg-open
		fi
		$opener $1 >/dev/null 2>&1 &!
		notify-send "${1##*/}" "Opened by $opener" -a notif
		shift
	done
}

# random text
lorem() {
	curl -s http://metaphorpsum.com/sentences/3 | pbcopy
}

share() {
	[[ $# != 1 ]] && echo usage: share \<file\> && return 1
	[[ ! -f $1 ]] && echo File non readable 1>&2 && return 2
	curl -F file=@$1 http://0x0.st 2>/dev/null | pbcopy && pbpaste
}

# replace patterns in file name
# by default:
# F=' ' R= evomer stuff
evomer() {
	[[ $# = 0 ]] && \
	echo usage: \[F=pat1\] \[R=pat2\] evomer \<files\> >&2 && \
	return 1

	for i in $* ; do
		tmp=${i//${F:= }/${R}}
		[[ "$tmp" == "$i" ]] && continue
		if [[ -f $tmp ]];
			then echo $tmp exists >&2
			else mv $i $tmp
		fi
	done
}

mount_dev() {
	[[ $# == 0 ]] && \
		echo usage: mmount \<device\> \[destination\] >&2 && \
		return 255

	[[ "${1:h2}" != "/dev" ]] && \
		echo Select a device >&2 && \
		return 254

	echo Mounting the device:
	sudo mount -o gid=users,fmask=113,dmask=002 "$1" "${2:-/mnt}" && echo mounted successfully || echo error
}

# zle stuff
export ZSH_HIGHLIGHT_STYLES[arg0]="none"
export ZSH_HIGHLIGHT_STYLES[path]="fg=cyan,bold"
export ZSH_HIGHLIGHT_STYLES[redirection]="fg=yellow,bold"
export ZSH_HIGHLIGHT_STYLES[autodirectory]="fg=blue,bold"
export ZSH_HIGHLIGHT_STYLES[reserved-word]="fg=yellow,bold"

# firefox stuff
export MOZ_X11_EGL=1
export VDPAU_DRIVER=va_gl

# qt dark theme
export QT_QPA_PLATFORMTHEME=qt5ct

# univ env
if [ "$(< ~/extra/state)" = "on" ]; then
	echo TP mode on /\!\\, autocd
	cd ~/maison/sync/inf401
	alias a2ps='a2ps -s 2 -A fill -M Letter'
	alias gcc='gcc -Wall -pedantic'
	export GNUARMDIR=~/extra/stolenbin/
	export PREFIX=`find ${GNUARMDIR} -maxdepth 1 -type d | grep --color=never arm- | sed -e "s/\/home\/${USER}\/extra\/stolenbin\///"`-
	export PATH=~/extra/stolenbin/bin:~/extra/inf401bin:${PATH}
fi

toggleTP() {
	if [ "$(cat ~/extra/state)" = "on" ]; then
		echo off | tee ~/extra/state
	else
		echo on | tee ~/extra/state
	fi
}

#linux: new terminal tabs keep the same wd
if [ -e /etc/profile.d/vte.sh ]; then
	. /etc/profile.d/vte.sh
fi

#auto startx on TTY1
if [[ $(tty) = /dev/tty1 ]]; then
	exec startx
fi

# vim: set ts=4 sts=4 sw=4 noet :
